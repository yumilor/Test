# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
  
#   desc "Assemble Build"
#   lane :assemble_build do |options|
# 	gradle(
# 		task: "assemble",
# 		flavor: options[:build_flavor],
# 		build_type: options[:build_type]
# 	)
#   end
#
#   desc "Run Unit Tests"
#     lane :unit_tests do |options|
#       gradle(task: "test", flavor: options[:build_flavor], build_type: options[:build_type])
#     end
#
#   desc "Run UI Test in Firebase Test Lab"
#     lane :instrumentation_tests_testlab do |options|
#       assemble_build(build_flavor:options[:build_flavor], build_type:"Debug")
#       @app_apk = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
#
#       assemble_build(build_flavor:options[:build_flavor] + "Debug", build_type:"AndroidTest")
#       @android_test_apk = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
#
#       run_tests_firebase_testlab(
#           project_id: "sampleappcicd",
#           app_apk: @app_apk,
#           android_test_apk: @android_test_apk,
#           devices: [
#               {
#                   model: "Nexus6P",
#                   version: "27"
#               }
#           ],
#           delete_firebase_files: true
#       )
#       end
#
#     desc "Send Apk to Slack"
#     lane :send_apk_to_slack do |options|
#       assemble_build(build_flavor:options[:build_flavor], build_type:options[:build_type])
#       file_path = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
#       file_name = options[:build_flavor] + " " + options[:build_type]
#       sh "curl https://slack.com/api/files.upload -F token=\"xoxp-474526796610-473921783169-569292002371-90110c5e994a82f40efdae07038996a1\" \
#           -F channels=\"CDYAFET1A\" -F title=\"" + file_name + "\" -F file=@" + file_path
#     end
#
#     desc "Beta Deployment"
#     lane :beta do |options|
#       assemble_build(build_flavor:"Beta", build_type:"Release")
#       upload_to_play_store(
#           track: 'beta',
#           apk: Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
#       )
#       crashlytics(
#           apk_path:Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH],
#           api_token:'aee4492cf369d809aef43858bff0ebe71598851b',
#           build_secret:'f0ae8fb4562bc616993490b07f6020fd893759e771616704aca9bc8f035f333c'
#       )
#     end
#
#     desc "Release Deployment"
#     lane :release do |options|
#       assemble_build(build_flavor:"Pro", build_type:"Release")
#       upload_to_play_store(
#           apk: Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
#       )
#       crashlytics(
#           apk_path:Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH],
#           api_token:'aee4492cf369d809aef43858bff0ebe71598851b',
#           build_secret:'f0ae8fb4562bc616993490b07f6020fd893759e771616704aca9bc8f035f333c'
#       )
#     end

end
